const express = require('express');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');
const multer = require('multer');
const path = require('path');

const app = express();
app.use(bodyParser.json());

// Database connection
mongoose.connect('mongodb://localhost:27017/employees', { useNewUrlParser: true, useUnifiedTopology: true });

const employeeSchema = new mongoose.Schema({
  name: String,
  email: { type: String, unique: true },
  mobile: String,
  designation: String,
  gender: String,
  course: [String],
  img: String
});

const Employee = mongoose.model('Employee', employeeSchema);

// File upload setup
const storage = multer.diskStorage({
  destination: (req, file, cb) => cb(null, 'uploads/'),
  filename: (req, file, cb) => cb(null, Date.now() + path.extname(file.originalname))
});

const upload = multer({ 
  storage,
  fileFilter: (req, file, cb) => {
    const filetypes = /jpeg|jpg|png/;
    const mimetype = filetypes.test(file.mimetype);
    const extname = filetypes.test(path.extname(file.originalname).toLowerCase());
    if (mimetype && extname) return cb(null, true);
    cb('Error: File upload only supports the following filetypes - ' + filetypes);
  }
});

// Routes
app.post('/api/employees', upload.single('img'), async (req, res) => {
  try {
    const { name, email, mobile, designation, gender, course } = req.body;
    const img = req.file ? req.file.path : '';

    const newEmployee = new Employee({ name, email, mobile, designation, gender, course, img });
    await newEmployee.save();
    res.status(201).json(newEmployee);
  } catch (error) {
    res.status(400).json({ message: error.message });
  }
});

app.listen(5000, () => console.log('Server started on port 5000'));
